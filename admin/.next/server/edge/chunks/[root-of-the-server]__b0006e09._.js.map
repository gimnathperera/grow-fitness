{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/admin/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  // Get the auth token from cookies\n  const token = request.cookies.get(\"auth-storage\")?.value;\n\n  // Parse the token to check if user is authenticated\n  let isAuthenticated = false;\n  if (token) {\n    try {\n      const authData = JSON.parse(token);\n      isAuthenticated = authData?.state?.isAuthenticated === true;\n    } catch (error) {\n      // Invalid token, treat as unauthenticated\n      isAuthenticated = false;\n    }\n  }\n\n  // Public routes that don't require authentication\n  const publicRoutes = [\"/login\"];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  // For the root path, let the client-side handle the redirect\n  // This prevents hydration issues\n  if (pathname === \"/\") {\n    return NextResponse.next();\n  }\n\n  // If user is not authenticated and trying to access a protected route\n  if (!isAuthenticated && !isPublicRoute) {\n    return NextResponse.redirect(new URL(\"/login\", request.url));\n  }\n\n  // If user is authenticated and trying to access login page, redirect to dashboard\n  if (isAuthenticated && pathname === \"/login\") {\n    return NextResponse.redirect(new URL(\"/dashboard\", request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    \"/((?!api|_next/static|_next/image|favicon.ico).*)\",\n  ],\n};\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,kCAAkC;IAClC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,iBAAiB;IAEnD,oDAAoD;IACpD,IAAI,kBAAkB;IACtB,IAAI,OAAO;QACT,IAAI;YACF,MAAM,WAAW,KAAK,KAAK,CAAC;YAC5B,kBAAkB,UAAU,OAAO,oBAAoB;QACzD,EAAE,OAAO,OAAO;YACd,0CAA0C;YAC1C,kBAAkB;QACpB;IACF;IAEA,kDAAkD;IAClD,MAAM,eAAe;QAAC;KAAS;IAC/B,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,6DAA6D;IAC7D,iCAAiC;IACjC,IAAI,aAAa,KAAK;QACpB,OAAO,yMAAY,CAAC,IAAI;IAC1B;IAEA,sEAAsE;IACtE,IAAI,CAAC,mBAAmB,CAAC,eAAe;QACtC,OAAO,yMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,kFAAkF;IAClF,IAAI,mBAAmB,aAAa,UAAU;QAC5C,OAAO,yMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO,yMAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}